name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'ispitch-api/**'


  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    name: Frontend Build & Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint
      - name: Build
        run: npm run build

  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    name: Backend Install & Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ispitch-api
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install
      - name: Run lint (ruff)
        run: poetry run task lint
        
  ci-status:
    needs: [frontend, backend]
    if: always()
    
    name: CI Status
    runs-on: ubuntu-latest
    steps:
      - name: Check status of previous jobs
        run: |
          if [[ "${{ needs.frontend.result }}" == "failure" || "${{ needs.backend.result }}" == "failure" ]]; then
            echo "Um ou mais jobs falharam. O status final é de falha."
            exit 1
          else
            echo "Todos os jobs necessários passaram ou foram ignorados corretamente."
            exit 0
          fi